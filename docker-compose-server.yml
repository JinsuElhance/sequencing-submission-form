version: '2.4'

services:
  flask: &flask
    build:
      context: .
      dockerfile: Dockerfile-flask
    container_name: spun-flask
    depends_on:
      - db  
    environment:
      - PORT=56733        
    expose:
      - 56733      
    volumes:
      - .:/app
    env_file:
      - .env
    networks:
      - flask      

  celery-worker:
    container_name: spun-celery-worker  # Unique name for the Celery worker container
    build:
      context: .
      dockerfile: Dockerfile-flask
    depends_on:
      - db
      - redis
    expose:
      - 56734
    ports:
      - "5001:5001"  # Example port mapping for Celery worker
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      - PORT=56734
    networks:
      - flask
    entrypoint: celery -A app.celery worker --loglevel=info  # Celery worker command

  nginx:
    image: nginx:alpine
    build:
      context: .
      dockerfile: Dockerfile-nginx
    container_name: spun-flask-nginx
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443      
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - flask

  db:
    image: mysql:5.7
    environment:
      - flask
    env_file:
      - .env
    networks:
      - flask          
    restart: unless-stopped

  redis:
    image: "redis:latest"
    ports:
      - "6379:6379"
    networks:
      - flask
      
networks:
  default:
    name: default_network
  flask:
    driver: bridge
