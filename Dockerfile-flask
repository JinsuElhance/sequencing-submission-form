# Python image to use.
FROM python:3.11-alpine

ARG FLASK_PROCESS_USER
ARG FLASK_PROCESS_USER_ID
ARG FLASK_PROCESS_GROUP_ID

# Install necessary build dependencies
RUN apk update && \
    apk add --no-cache bash && \
    apk add --no-cache \
        build-base \
        python3-dev \
        linux-headers \
        musl-dev \
        mysql-dev \
        openjdk8 \
        perl

# Install Java 8 and perl as it is required by fastqc to run 
RUN apk add --no-cache openjdk8 && \
    apk add perl

# Set environment variable for Java 8
ENV JAVA_HOME=/usr/lib/jvm/default-jvm

# Download and instal fastqc
WORKDIR /usr/local/bin
RUN wget https://www.bioinformatics.babraham.ac.uk/projects/fastqc/fastqc_v0.11.9.zip -O fastqc.zip && \
    unzip fastqc.zip && \
    chmod +x FastQC/fastqc && \
    ln -s /usr/local/bin/FastQC/fastqc /usr/local/bin/fastqc

# Set FastQC in the PATH  
ENV PATH="/usr/local/bin/FastQC:${PATH}"    

# Create a non-root user
RUN addgroup -g $FLASK_PROCESS_GROUP_ID $FLASK_PROCESS_USER
RUN adduser -D -u $FLASK_PROCESS_USER_ID -G $FLASK_PROCESS_USER $FLASK_PROCESS_USER

# Set the working directory to /app
WORKDIR /app

# Change ownership of the application directory to the non-root user
RUN chown -R $FLASK_PROCESS_USER:$FLASK_PROCESS_GROUP_ID /app

# copy the requirements file used for dependencies
COPY requirements.txt .

# Install any needed packages specified in requirements.txt
RUN pip install --trusted-host pypi.python.org -r requirements.txt

USER $FLASK_PROCESS_USER

# Copy the rest of the working directory contents into the container at /app
# COPY . .

# Run app.py when the container launches
ENTRYPOINT ["python", "app.py"]
