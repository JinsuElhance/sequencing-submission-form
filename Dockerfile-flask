# Python image to use.
FROM python:3.11-alpine

ARG FLASK_PROCESS_USER
ARG FLASK_PROCESS_USER_ID
ARG FLASK_PROCESS_GROUP_ID

# Install Bash
RUN apk update && \
    apk add --no-cache bash && \
    apk add --no-cache mysql-dev gcc musl-dev

# Install Java 8 and perl as it is required by fastqc to run 
RUN apk add --no-cache openjdk8 && \
    apk add perl

# Set environment variable for Java 8
ENV JAVA_HOME=/usr/lib/jvm/default-jvm

# Download and instal fastqc
WORKDIR /usr/local/bin
RUN wget https://www.bioinformatics.babraham.ac.uk/projects/fastqc/fastqc_v0.11.9.zip -O fastqc.zip && \
    unzip fastqc.zip && \
    chmod +x FastQC/fastqc && \
    ln -s /usr/local/bin/FastQC/fastqc /usr/local/bin/fastqc

# Set FastQC in the PATH  
ENV PATH="/usr/local/bin/FastQC:${PATH}"    

# Create a non-root user
RUN adduser --disabled-password --gecos '' --uid $FLASK_PROCESS_USER_ID $FLASK_PROCESS_USER

# TODO: Find the correct way to also make sure that the running user runs as the correct group.
# STOPPED end of day 2024-02-12
# RUN addgroup --gid $FLASK_PROCESS_GROUP_ID $FLASK_PROCESS_USER
# RUN usermod -g $FLASK_PROCESS_GROUP_ID $FLASK_PROCESS_USER
    
# Set the working directory to /app
WORKDIR /app

# Change ownership of the application directory to the non-root user
RUN chown -R $FLASK_PROCESS_USER:$FLASK_PROCESS_USER /app

# copy the requirements file used for dependencies
COPY requirements.txt .

USER $FLASK_PROCESS_USER

# Install any needed packages specified in requirements.txt
RUN pip install --trusted-host pypi.python.org -r requirements.txt

# Copy the rest of the working directory contents into the container at /app
COPY . .

# Run app.py when the container launches
ENTRYPOINT ["python", "app.py"]
