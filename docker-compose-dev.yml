version: '2.4'

services:
  flask: &flask
    build:
      context: .
      dockerfile: Dockerfile-flask
    container_name: spun-flask
    depends_on:
      - db    
    expose:
      - 56733      
    volumes:
      - .:/app
      - ${GOOGLE_APPLICATION_CREDENTIALS_PATH}:/google_auth_file/key_file.json      
    env_file:
      - .env
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/google_auth_file/key_file.json
      - OAUTHLIB_INSECURE_TRANSPORT=1
    networks:
      - flask      

  nginx:
    image: nginx:alpine
    container_name: spun-flask-nginx
    restart: unless-stopped
    ports:
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/www/:/var/www/certbot/:ro
    networks:
      - flask

  db:
    image: mysql:5.7
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=flask
      - MYSQL_USER=flask
      - MYSQL_PASSWORD=flask
    networks:
      - database
      - flask
    restart: unless-stopped
    
  adminer:
    depends_on:
      - db
    volumes:
      - ./config/docker/adminer/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
    image: adminer
    ports:
      - 8080:8080
    environment:
      - ADMINER_DESIGN=pepa-linha
      - VIRTUAL_HOST=db.b4b.local
      - VIRTUAL_PORT=8080
    networks:
      - database
    restart: unless-stopped    

networks:
  default:
    name: default_network
  database:    
  flask:
    driver: bridge
